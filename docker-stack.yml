version: '3.7'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    #container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ilm_enabled=true
      - discovery.zen.minimum_master_nodes=1
######node tipe####
      #- "node.master=false"
      #- "node.data=false"
      - "node.ingest=false"
      #- "cluster.remote.connect=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.80'
          memory: 2g
    volumes:
      - elastic_data01:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    environment:
      - node.name=elasticsearch2
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=docker-cluster
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ilm_enabled=true
      - discovery.seed_hosts=elasticsearch
######node tipe####
      - "node.master=false"
      #- "node.data=false"
      - "node.ingest=false"
      #- "cluster.remote.connect=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk
    volumes:
      - elastic_data02:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.80'
          memory: 2g

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    environment:
      - node.name=elasticsearch3
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=docker-cluster
      - discovery.seed_hosts=elasticsearch
      - "ES_JAVA_OPTS=-Xmx2g -Xms2g"
      #- bootstrap.memory_lock=true
      #- "discovery.zen.ping.unicast.hosts=elasticsearch"
######node tipe####
      - "node.master=false"
      - "node.data=false"
      #- "node.ingest=true"
      #- "cluster.remote.connect=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk
    volumes:
      #- elastic_data03:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1.50'
          memory: 3g

  logstash:
    image: docker.elastic.co/logstash/logstash:7.1.1
    ports:
      - "514:5144/udp"
      - "9600:9600"
    configs:
      #ogirinal
      - source: logstash_config
        target: /usr/share/logstash/config/logstash.yml
      - source: logstash_pipeline
        target: /usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elk
    volumes:
      - /etc/localtime:/etc/localtime
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 800M
  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.1
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    volumes:
      - /etc/localtime:/etc/localtime
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

configs:
##elasticsearsh configs
#  elastic_config:
#    file: ./elasticsearch/config/elasticsearch.yml
#Logstash configs
  logstash_config:
    file: ./logstash/config/logstash.yml
  pfsense.grok:
    file: ./logstash/pipeline/pfsense.grok
  logstash_pipeline:
    file: ./logstash/pipeline/logstash.conf
  logstash_elasticsearch-template.json:
    file: ./logstash/pipeline/elasticsearch-template.json
#kibana config
  kibana_config:
    file: ./kibana/config/kibana.yml
    
volumes:
  elastic_data01:
  elastic_data02:

networks:
  elk:
    driver: overlay
